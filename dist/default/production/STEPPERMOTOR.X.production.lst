

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 16 12:26:46 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     8                           	dabs	1,0x7E,2
     9  0000                     
    10                           ; Version 2.20
    11                           ; Generated 12/02/2020 GMT
    12                           ; 
    13                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  0087                     	;# 
    83  0088                     	;# 
    84  0089                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  018C                     	;# 
   103  018D                     	;# 
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0086                     	;# 
   142  0087                     	;# 
   143  0088                     	;# 
   144  0089                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0006                     _PORTB	set	6
   165  0086                     _TRISB	set	134
   166                           
   167                           	psect	cinit
   168  07FC                     start_initialization:	
   169                           ; #config settings
   170                           
   171  07FC                     __initialization:
   172  07FC                     end_of_initialization:	
   173                           ;End of C runtime variable initialization code
   174                           
   175  07FC                     __end_of__initialization:
   176  07FC  0183               	clrf	3
   177  07FD  120A  118A  2F75   	ljmp	_main	;jump to C main() function
   178                           
   179                           	psect	cstackCOMMON
   180  0070                     __pcstackCOMMON:
   181  0070                     ?_main:
   182  0070                     ??_main:	
   183                           ; 1 bytes @ 0x0
   184                           
   185                           
   186                           ; 1 bytes @ 0x0
   187  0070                     	ds	3
   188  0073                     main@j:
   189                           
   190                           ; 2 bytes @ 0x3
   191  0073                     	ds	2
   192  0075                     main@j_37:
   193                           
   194                           ; 2 bytes @ 0x5
   195  0075                     	ds	2
   196  0077                     main@i:
   197                           
   198                           ; 1 bytes @ 0x7
   199  0077                     	ds	1
   200                           
   201                           	psect	maintext
   202  0775                     __pmaintext:	
   203 ;;
   204 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   205 ;;
   206 ;; *************** function _main *****************
   207 ;; Defined at:
   208 ;;		line 11 in file "steppermotor.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;  j               2    5[COMMON] int 
   213 ;;  j               2    3[COMMON] int 
   214 ;;  i               1    7[COMMON] unsigned char 
   215 ;; Return value:  Size  Location     Type
   216 ;;                  1    wreg      void 
   217 ;; Registers used:
   218 ;;		wreg, status,2, status,0, btemp+1
   219 ;; Tracked objects:
   220 ;;		On entry : B00/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   224 ;;      Params:         0       0       0       0       0
   225 ;;      Locals:         5       0       0       0       0
   226 ;;      Temps:          3       0       0       0       0
   227 ;;      Totals:         8       0       0       0       0
   228 ;;Total ram usage:        8 bytes
   229 ;; This function calls:
   230 ;;		Nothing
   231 ;; This function is called by:
   232 ;;		Startup code after reset
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           
   237                           ;psect for function _main
   238  0775                     _main:
   239  0775                     l612:	
   240                           ;incstack = 0
   241                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   242                           
   243                           
   244                           ;steppermotor.c: 13:     unsigned char i=0 ;
   245  0775  01F7               	clrf	main@i
   246                           
   247                           ;steppermotor.c: 15:     TRISB =0X00;
   248  0776  1683               	bsf	3,5	;RP0=1, select bank1
   249  0777  1303               	bcf	3,6	;RP1=0, select bank1
   250  0778  0186               	clrf	6	;volatile
   251                           
   252                           ;steppermotor.c: 17:     PORTB=0x00;
   253  0779  1283               	bcf	3,5	;RP0=0, select bank0
   254  077A  1303               	bcf	3,6	;RP1=0, select bank0
   255  077B  0186               	clrf	6	;volatile
   256  077C                     l11:	
   257                           ;steppermotor.c: 20:     while(1)
   258                           
   259                           
   260                           ;steppermotor.c: 21:     {;steppermotor.c: 22:     for(int j=0; j<48; j++)
   261  077C  01F3               	clrf	main@j
   262  077D  01F4               	clrf	main@j+1
   263  077E                     l618:
   264                           
   265                           ;steppermotor.c: 23:      {;steppermotor.c: 24:      PORTB = (1<<i);
   266  077E  3001               	movlw	1
   267  077F  00F0               	movwf	??_main
   268  0780  0A77               	incf	main@i,w
   269  0781  2F84               	goto	u14
   270  0782                     u15:
   271  0782  1003               	clrc
   272  0783  0DF0               	rlf	??_main,f
   273  0784                     u14:
   274  0784  3EFF               	addlw	-1
   275  0785  1D03               	skipz
   276  0786  2F82               	goto	u15
   277  0787  0870               	movf	??_main,w
   278  0788  1283               	bcf	3,5	;RP0=0, select bank0
   279  0789  1303               	bcf	3,6	;RP1=0, select bank0
   280  078A  0086               	movwf	6	;volatile
   281                           
   282                           ;steppermotor.c: 25:      i++;
   283  078B  3001               	movlw	1
   284  078C  00F0               	movwf	??_main
   285  078D  0870               	movf	??_main,w
   286  078E  07F7               	addwf	main@i,f
   287  078F                     l620:
   288                           
   289                           ;steppermotor.c: 26:      _delay((unsigned long)((100)*(4000000/4000.0)));
   290  078F  3082               	movlw	130
   291  0790  00F1               	movwf	??_main+1
   292  0791  30DD               	movlw	221
   293  0792  00F0               	movwf	??_main
   294  0793                     u77:
   295  0793  0BF0               	decfsz	??_main,f
   296  0794  2F93               	goto	u77
   297  0795  0BF1               	decfsz	??_main+1,f
   298  0796  2F93               	goto	u77
   299  0797  2F98               	nop2
   300  0798                     l622:
   301                           
   302                           ;steppermotor.c: 27:      if(i==4)
   303  0798  3004               	movlw	4
   304  0799  0677               	xorwf	main@i,w
   305  079A  1D03               	btfss	3,2
   306  079B  2F9D               	goto	u21
   307  079C  2F9E               	goto	u20
   308  079D                     u21:
   309  079D  2F9F               	goto	l626
   310  079E                     u20:
   311  079E                     l624:
   312                           
   313                           ;steppermotor.c: 28:       {;steppermotor.c: 29:       i=0;
   314  079E  01F7               	clrf	main@i
   315  079F                     l626:
   316                           
   317                           ;steppermotor.c: 31:      }
   318  079F  3001               	movlw	1
   319  07A0  07F3               	addwf	main@j,f
   320  07A1  1803               	skipnc
   321  07A2  0AF4               	incf	main@j+1,f
   322  07A3  3000               	movlw	0
   323  07A4  07F4               	addwf	main@j+1,f
   324  07A5                     l628:
   325  07A5  0874               	movf	main@j+1,w
   326  07A6  3A80               	xorlw	128
   327  07A7  00FF               	movwf	btemp+1
   328  07A8  3080               	movlw	128
   329  07A9  027F               	subwf	btemp+1,w
   330  07AA  1D03               	skipz
   331  07AB  2FAE               	goto	u35
   332  07AC  3030               	movlw	48
   333  07AD  0273               	subwf	main@j,w
   334  07AE                     u35:
   335  07AE  1C03               	skipc
   336  07AF  2FB1               	goto	u31
   337  07B0  2FB2               	goto	u30
   338  07B1                     u31:
   339  07B1  2F7E               	goto	l618
   340  07B2                     u30:
   341  07B2                     l630:
   342                           
   343                           ;steppermotor.c: 32:     _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   344  07B2  3006               	movlw	6
   345  07B3  00F2               	movwf	??_main+2
   346  07B4  3013               	movlw	19
   347  07B5  00F1               	movwf	??_main+1
   348  07B6  30AD               	movlw	173
   349  07B7  00F0               	movwf	??_main
   350  07B8                     u87:
   351  07B8  0BF0               	decfsz	??_main,f
   352  07B9  2FB8               	goto	u87
   353  07BA  0BF1               	decfsz	??_main+1,f
   354  07BB  2FB8               	goto	u87
   355  07BC  0BF2               	decfsz	??_main+2,f
   356  07BD  2FB8               	goto	u87
   357  07BE  2FBF               	nop2
   358  07BF                     l632:
   359                           
   360                           ;steppermotor.c: 34:     for(int j=0; j<48; j++)
   361  07BF  01F5               	clrf	main@j_37
   362  07C0  01F6               	clrf	main@j_37+1
   363  07C1                     l638:
   364                           
   365                           ;steppermotor.c: 35:      {;steppermotor.c: 36:      PORTB = (8>>i);
   366  07C1  0A77               	incf	main@i,w
   367  07C2  00F0               	movwf	??_main
   368  07C3  3008               	movlw	8
   369  07C4  00F1               	movwf	??_main+1
   370  07C5  3000               	movlw	0
   371  07C6  00F2               	movwf	??_main+2
   372  07C7  2FCB               	goto	u44
   373  07C8                     u45:
   374  07C8  0D72               	rlf	??_main+2,w
   375  07C9  0CF2               	rrf	??_main+2,f
   376  07CA  0CF1               	rrf	??_main+1,f
   377  07CB                     u44:
   378  07CB  0BF0               	decfsz	??_main,f
   379  07CC  2FC8               	goto	u45
   380  07CD  0871               	movf	??_main+1,w
   381  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   382  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   383  07D0  0086               	movwf	6	;volatile
   384                           
   385                           ;steppermotor.c: 37:      i++;
   386  07D1  3001               	movlw	1
   387  07D2  00F0               	movwf	??_main
   388  07D3  0870               	movf	??_main,w
   389  07D4  07F7               	addwf	main@i,f
   390  07D5                     l640:
   391                           
   392                           ;steppermotor.c: 38:      _delay((unsigned long)((100)*(4000000/4000.0)));
   393  07D5  3082               	movlw	130
   394  07D6  00F1               	movwf	??_main+1
   395  07D7  30DD               	movlw	221
   396  07D8  00F0               	movwf	??_main
   397  07D9                     u97:
   398  07D9  0BF0               	decfsz	??_main,f
   399  07DA  2FD9               	goto	u97
   400  07DB  0BF1               	decfsz	??_main+1,f
   401  07DC  2FD9               	goto	u97
   402  07DD  2FDE               	nop2
   403  07DE                     l642:
   404                           
   405                           ;steppermotor.c: 39:      if(i==4)
   406  07DE  3004               	movlw	4
   407  07DF  0677               	xorwf	main@i,w
   408  07E0  1D03               	btfss	3,2
   409  07E1  2FE3               	goto	u51
   410  07E2  2FE4               	goto	u50
   411  07E3                     u51:
   412  07E3  2FE5               	goto	l646
   413  07E4                     u50:
   414  07E4                     l644:
   415                           
   416                           ;steppermotor.c: 40:       {;steppermotor.c: 41:       i=0;
   417  07E4  01F7               	clrf	main@i
   418  07E5                     l646:
   419                           
   420                           ;steppermotor.c: 43:      }
   421  07E5  3001               	movlw	1
   422  07E6  07F5               	addwf	main@j_37,f
   423  07E7  1803               	skipnc
   424  07E8  0AF6               	incf	main@j_37+1,f
   425  07E9  3000               	movlw	0
   426  07EA  07F6               	addwf	main@j_37+1,f
   427  07EB                     l648:
   428  07EB  0876               	movf	main@j_37+1,w
   429  07EC  3A80               	xorlw	128
   430  07ED  00FF               	movwf	btemp+1
   431  07EE  3080               	movlw	128
   432  07EF  027F               	subwf	btemp+1,w
   433  07F0  1D03               	skipz
   434  07F1  2FF4               	goto	u65
   435  07F2  3030               	movlw	48
   436  07F3  0275               	subwf	main@j_37,w
   437  07F4                     u65:
   438  07F4  1C03               	skipc
   439  07F5  2FF7               	goto	u61
   440  07F6  2FF8               	goto	u60
   441  07F7                     u61:
   442  07F7  2FC1               	goto	l638
   443  07F8                     u60:
   444  07F8  2F7C               	goto	l11
   445  07F9  120A  118A  2800   	ljmp	start
   446  07FC                     __end_of_main:
   447  007E                     btemp	set	126	;btemp
   448  007E                     wtemp0	set	126
   449                           
   450                           	psect	config
   451                           
   452                           ;Config register CONFIG @ 0x2007
   453                           ;	Oscillator Selection bits
   454                           ;	FOSC = XT, XT oscillator
   455                           ;	Watchdog Timer Enable bit
   456                           ;	WDTE = OFF, WDT disabled
   457                           ;	Power-up Timer Enable bit
   458                           ;	PWRTE = ON, PWRT enabled
   459                           ;	Brown-out Reset Enable bit
   460                           ;	BOREN = OFF, BOR disabled
   461                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   462                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   463                           ;	Data EEPROM Memory Code Protection bit
   464                           ;	CPD = OFF, Data EEPROM code protection off
   465                           ;	Flash Program Memory Write Enable bits
   466                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   467                           ;	In-Circuit Debugger Mode bit
   468                           ;	DEBUG = 0x1, unprogrammed default
   469                           ;	Flash Program Memory Code Protection bit
   470                           ;	CP = OFF, Code protection off
   471  2007                     	org	8199
   472  2007  3F31               	dw	16177

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     120
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 16 12:26:46 2021

                     l11 077C                       u20 079E                       u21 079D  
                     u30 07B2                       u14 0784                       u31 07B1  
                     u15 0782                       u50 07E4                       u51 07E3  
                     u35 07AE                       u60 07F8                       u44 07CB  
                     u61 07F7                       u45 07C8                       u65 07F4  
                     u77 0793                       u87 07B8                       u97 07D9  
                    l620 078F                      l612 0775                      l630 07B2  
                    l622 0798                      l640 07D5                      l632 07BF  
                    l624 079E                      l642 07DE                      l626 079F  
                    l618 077E                      l644 07E4                      l628 07A5  
                    l646 07E5                      l638 07C1                      l648 07EB  
                   _main 0775                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  main@i 0077                    main@j 0073                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 0775     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002            __size_of_main 0087                 main@j_37 0075  
